services:
  app:
    build: .
    image: shipping/app
    command: bash -c "rm -f tmp/pids/server.pid && bundle exec rails s -p 3000 -b '0.0.0.0'"
    container_name: shipping-app
    volumes:
      - .:/shipping_software
    ports:
      - "${SERVER_PORT}:3000"
    stdin_open: true
    tty: true
    depends_on:
      - db
      - redis
    environment:
        - HOST=${HOST}
        - DATABASE_USERNAME=${DATABASE_USERNAME}
        - DATABASE_PASSWORD=${DATABASE_PASSWORD}
        - RAILS_ENV=${RAILS_ENV}
        - PRODUCTION_DATABASE_NAME=${PRODUCTION_DATABASE_NAME}
  background:
    image: shipping/app
    container_name: shipping-background
    command: bundle exec sidekiq -C config/sidekiq.yml
    volumes:
      - .:/shipping_software
    stdin_open: true
    tty: true
    depends_on:
      - redis
      - app
    environment:
        - HOST=${HOST}
        - DATABASE_USERNAME=${DATABASE_USERNAME}
        - DATABASE_PASSWORD=${DATABASE_PASSWORD}
        - RAILS_ENV=${RAILS_ENV}
        - PRODUCTION_DATABASE_NAME=${PRODUCTION_DATABASE_NAME}
  db:
    image: postgres:16.4-alpine3.20
    restart: always
    volumes:
      - D:\Documents\sql\shipping\data:/var/lib/postgresql/data
      - ./init-user-db.sh:/docker-entrypoint-initdb.d/init-user-db.sh
    ports:
      - "5432:5432"
    environment:
        - POSTGRES_PASSWORD=${POSTGRES_PASSWORD}
  redis:
    image: redis:7.2.3
    restart: always
    volumes:
      - D:\Documents\shipping_redis\:/data
volumes:
  pgdata: